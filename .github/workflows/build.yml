name: Multi-Arch Build and Push

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    name: ${{ matrix.service }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        service: [hoppscotch]
        include:
          - service: hoppscotch
            runner: xooi-meet
            platforms: |
                linux/amd64
                linux/arm64
            ecr_repository: hoppscotch
            target: aio
            no_cache: true
            push: true
            build_file: ./prod.Dockerfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate unique ID for image tag
        id: uuid
        run: echo "uid=$(date +%s%N | sha256sum | head -c 8)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Builder
        uses: docker/setup-buildx-action@v3

      - name: Delete old latest tag
        run: |
          aws ecr batch-delete-image --repository-name $ECR_REPOSITORY \
          --image-ids imageTag=latest || true
        env:
          ECR_REPOSITORY: ${{ matrix.ecr_repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          UNIQUE_TAG: build-${{ steps.uuid.outputs.uid }}
          DOCKER_BUILD_SUMMARY: false
        with:
          context: .
          file: ${{ matrix.build_file }}
          platforms: ${{ matrix.platforms }}
          push: ${{ matrix.push }}
          target: ${{ matrix.target }}
          no-cache: ${{ matrix.no_cache }}
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ matrix.ecr_repository }}:${{ github.ref_name }}
            ${{ steps.login-ecr.outputs.registry }}/${{ matrix.ecr_repository }}:latest
          provenance: false
          build-args: |
            GIT_REF=${{ github.ref }}
            GIT_SHA=${{ github.sha }}